{"version":3,"sources":["Services.js","components/FindGitHubUser.js","enums.js","components/FollowersDisplay.js","App.js","serviceWorker.js","index.js"],"names":["root","indexDefault","usernameDefault","perPageDefault","getIndex","reset","username","perPage","page","nextPage","getGitHubUser","Promise","resolve","reject","fetch","then","response","json","catch","error","getGitHubUserFollowers","Array","isArray","Error","getMoreUsers","flag","FindGitHubUser","props","user","followerCount","followers","findGitHubUser","findGitHubUserChange","getGitHubFollowers","getNext","className","onSubmit","e","nativeEvent","preventDefault","length","id","type","value","autoFocus","onChange","placeholder","key","onClick","defaultProps","index","FollowersDisplay","getFollowers","target","dataset","getUser","scrollRef","React","createRef","this","current","scrollTop","showFollowers","userID","avatar_url","followersDisplay","map","item","src","alt","data-username","login","title","userDisplay","defaultDisplay","element","ref","Component","App","followerName","back","history","state","push","setState","console","selectedusername","moreFollowers","location","queryString","parse","search","backListener","listen","action","values","nextProps","nextState","nextContext","isEqual","Boolean","window","hostname","match","createBrowserHistory","ReactDOM","render","path","component","forceRefresh","document","getElementById","navigator","serviceWorker","ready","registration","unregister","message"],"mappings":"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","file":"static/js/main.fdd0b8f1.chunk.js","sourcesContent":["const root = 'https://api.github.com/';\n\nlet indexDefault = 1;\nlet usernameDefault = '';\nlet perPageDefault = 10;\n\nexport const getIndex = () => {\n\treturn indexDefault;\n};\n\nconst reset = ({username = '', perPage = 10, page = 1} = {}) => {\n\tindexDefault = page;\n\tusernameDefault = username;\n\tperPageDefault = perPage;\n};\n\nconst nextPage = () => {\n\tindexDefault++;\n};\n\nexport const getGitHubUser = (username = '') => {\n\treset({\n\t\tusername,\n\t\tperPage: 10,\n\t\tpage: 1\n\t});\n\treturn new Promise((resolve, reject) => {\n\t\tfetch(`${root}users/${username}`).then((response = {}) => {\n\t\t\treturn response.json && response.json();\n\t\t}).then(json => {\n\t\t\tresolve(json);\n\t\t}).catch(error => {\n\t\t\treject(error);\n\t\t});\n\t});\n};\n\nexport const getGitHubUserFollowers = ({username = '', perPage = perPageDefault, page = 1} = {}) => {\n\treset({\n\t\tusername,\n\t\tperPage,\n\t\tpage\n\t});\n\n\treturn new Promise((resolve, reject) => {\n\t\tfetch(`${root}users/${username}/followers?per_page=${perPage}&page=${page}`).then((response = {}) => {\n\t\t\treturn response.json && response.json();\n\t\t}).then(json => {\n\t\t\tif(Array.isArray(json) === false) {\n\t\t\t\tthrow new Error('invalid')\n\t\t\t} else {\n\t\t\t\tresolve(json);\n\t\t\t}\n\t\t}).catch(error => {\n\t\t\treject(error);\n\t\t});\n\t})\n};\n\nexport const getMoreUsers = ({perPage = perPageDefault} = {}) => {\n\tnextPage();\n\treturn new Promise((resolve, reject) => {\n\t\tfetch(`${root}users/${usernameDefault}/followers?per_page=${perPage}&page=${indexDefault}`).then(response => {\n\t\t\treturn response.json && response.json();\n\t\t}).then(json => {\n\t\t\tresolve(json);\n\t\t}).catch(error => {\n\t\t\treject(error);\n\t\t});\n\t})\n};\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport enums from '../enums';\n\nconst {minUserLength} = enums;\nlet flag = false\n\nconst FindGitHubUser = (props = {}) => {\n\tconst {\n\t\tuser: {\n\t\t\tfollowerCount,\n\t\t\tfollowers,\n\t\t\tusername\n\t\t},\n\t\tfindGitHubUser,\n\t\tfindGitHubUserChange,\n\t\tgetGitHubFollowers,\n\t\tgetNext\n\t} = props;\n\n\treturn (\n\t\t<div className=\"content\">\n\t\t\t<form onSubmit={(e = {}) => {\n\t\t\t\te.nativeEvent.preventDefault();\n\t\t\t\tif(flag){\n\t\t\t\t\tflag = false;\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\tif(username.length > minUserLength) {\n\t\t\t\t\tfindGitHubUser();\n\t\t\t\t}\n\t\t\t}}>\n\t\t\t\t<input id=\"findGithubUser\"\n\t\t\t\t\t   type=\"text\"\n\t\t\t\t\t   value={username}\n\t\t\t\t\t   autoFocus\n\t\t\t\t\t   onChange={findGitHubUserChange}\n\t\t\t\t\t   placeholder=\"GitHub User\" />\n\t\t\t\t{username.length >= minUserLength && <button key=\"findGitHubUser_btn\" onClick={(e = {}) => {\n\t\t\t\t\tflag = true;\n\t\t\t\t\tfindGitHubUser();\n\t\t\t\t}}>\n\t\t\t\t\tFind GitHub User\n\t\t\t\t</button>}\n\t\t\t\t{followerCount > 0 && <button key=\"getGitHubFollowersClick_btn\" onClick={(e = {}) => {\n\t\t\t\t\tflag = true;\n\t\t\t\t\tgetGitHubFollowers();\n\t\t\t\t}}>\n\t\t\t\t\tFind GitHub User Followers\n\t\t\t\t</button>}\n\t\t\t\t{(followers.length > 0 && followerCount > followers.length) && <button key=\"getNext_btn\" onClick={(e = {}) => {\n\t\t\t\t\tflag = true;\n\t\t\t\t\tgetNext();\n\t\t\t\t}}>\n\t\t\t\t\tLoad More...\n\t\t\t\t</button>}\n\t\t\t</form>\n\t\t</div>\n\t)\n};\n\nFindGitHubUser.propTypes = {\n\tindex:PropTypes.number,\n\tuser: PropTypes.object,\n\tfindGitHubUser: PropTypes.func,\n\tfindGitHubUserChange: PropTypes.func,\n\tgetGitHubFollowers: PropTypes.func,\n\tgetNext: PropTypes.func\n};\n\nFindGitHubUser.defaultProps = {\n\tindex : -1,\n\tuser: {},\n\tfindGitHubUser: (e = {}) => {},\n\tfindGitHubUserChange: (e = {}) => {},\n\tgetGitHubFollowers: (e = {}) => {},\n\tgetNext: (e = {}) => {}\n};\n\nexport default FindGitHubUser\n","export default {\n\tminUserLength : 3\n}\n","import React, {Component} from \"react\";\nimport PropTypes from \"prop-types\";\nimport {Link} from \"react-router-dom\";\n\nclass FollowersDisplay extends Component {\n\tconstructor(props = {}) {\n\t\tsuper(props);\n\t\tthis.scrollRef = React.createRef();\n\t}\n\n\tgetFollowers = (e = {}) => {\n\t\tconst {getGitHubFollowers} = this.props;\n\t\tconst {username} = e.nativeEvent.target.dataset;\n\t\tusername && getGitHubFollowers(e, username);\n\t};\n\n\tgetUser = (e = {}) => {\n\t\tconst {findGitHubUser} = this.props;\n\t\tconst {username} = e.nativeEvent.target.dataset;\n\t\tusername && findGitHubUser(e, username);\n\t};\n\n\trender() {\n\t\tif(this.scrollRef.current) {\n\t\t\tthis.scrollRef.current.scrollTop = 0;\n\t\t}\n\n\t\tconst {\n\t\t\tshowFollowers,\n\t\t\tuser: {\n\t\t\t\tid:userID,\n\t\t\t\tavatar_url,\n\t\t\t\tusername,\n\t\t\t\tfollowers = [],\n\t\t\t} = {}\n\t\t} = this.props;\n\n\t\tconst followersDisplay = showFollowers && followers.length && followers.map((item = {}) => {\n\t\t\treturn (\n\t\t\t\t<div className=\"avatar\" key={`follower_${item.id}`}>\n\t\t\t\t\t\t<img src={item.avatar_url}\n\t\t\t\t\t\t \talt={item.avatar_url}\n\t\t\t\t\t\t \tdata-username={`${item.login}`}\n\t\t\t\t\t\t \ttitle={`follower ${item.login}`} />\n\t\t\t\t\t\t<div className=\"user-name\" data-username={`${item.login}`}>{item.login}</div>\n\t\t\t\t</div>\n\t\t\t)\n\t\t});\n\n\t\tconst userDisplay = !showFollowers && username && (\n\t\t\t<div className=\"avatar\" key={userID}>\n\t\t\t\t\t{avatar_url && <img src={avatar_url} alt={avatar_url} data-username={`${username}`} title={`user ${username}`}></img>}\n\t\t\t\t\t<div className=\"user-name\" data-username={`${username}`}>{username}</div>\n\t\t\t</div>\n\t\t);\n\t\tconst defaultDisplay = (<div>No GitHub User</div>);\n\t\tconst element = (followersDisplay || userDisplay || defaultDisplay);\n\t\tconst parent = (\n\t\t\tfollowersDisplay? <div id=\"followers-display\" ref={this.scrollRef} onClick={this.getUser}>{element}</div> :\n\t\t\tuserDisplay? <div id=\"followers-display\" ref={this.scrollRef} onClick={this.getFollowers}>{element}</div> :\n\t\t\t<div id=\"followers-display\">{element}</div>\n\t\t);\n\n\t\treturn (parent);\n\t}\n}\n\nFollowersDisplay.propTypes = {\n\tuser: PropTypes.object,\n\tfindGitHubUser: PropTypes.func,\n\tgetGitHubFollowers: PropTypes.func\n};\n\nFollowersDisplay.defaultProps = {\n\tuser: {},\n\tfindGitHubUser: (e) => {},\n\tgetGitHubFollowers: (e) => {}\n};\n\nexport default (FollowersDisplay);\n","import React, {Component} from 'react';\nimport {getGitHubUser, getGitHubUserFollowers, getMoreUsers, getIndex} from './Services';\nimport FindGitHubUser from \"./components/FindGitHubUser\";\nimport FollowersDisplay from \"./components/FollowersDisplay\";\nimport {isEqual} from \"lodash\";\nimport queryString from 'query-string'\n\nexport default class App extends Component {\n    constructor(props = {}) {\n        super(props);\n\n        this.state = {\n            index: getIndex(),\n            showFollowers: false,\n            user: {\n                id:0,\n                username:'',\n                followers: [],\n                followerCount: 0\n            }\n        };\n    };\n\n    componentDidMount() {\n        const {history, location} = this.props;\n        const values = queryString.parse(location.search);\n        const {username} = values;\n        username && this.findGitHubUser('', username);\n\n        this.backListener = history.listen((location, action) => {\n            debugger\n            if (action === \"POP\") {\n                const values = queryString.parse(location.search);\n                const {username, followers} = values;\n                if(followers && followers === 'true') {\n                    username && this.getGitHubFollowers('', username, true);\n                } else {\n                    username && this.findGitHubUser('', username, true);\n\n                }\n            }\n        });\n    }\n\n    findGitHubUser = (e = {}, followerName = '', back) => {\n        const {history} = this.props;\n        const {user: {username, followers, id} = {}} = this.state;\n\n        if(!back) {\n            history.push(`?username=${followerName || username}`);\n        }\n        getGitHubUser(followerName || username).then((user = {}) => {\n            this.setState({\n                showFollowers: false,\n                index: getIndex(),\n                user: {\n                    ...user,\n                    username: followerName || username,\n                    followerCount: user.followers,\n                    followers: id === user.id ? followers : [],\n                },\n            });\n        }).catch(error => {\n            console.error(error);\n        });\n    };\n\n    findGitHubUserChange = (e = {}) => {\n        const {value} = e.target;\n        const user =  {\n            username : value,\n            followers: [],\n            followerCount: 0\n        };\n\n        this.setState({\n            user\n        });\n    };\n\n    getGitHubFollowers = (e = {}, selectedusername = '', back) => {\n        const {user: {username, followerCount} = {}} = this.state;\n        const {history} = this.props;\n\n        if(!back) {\n            history.push(`?username=${username}&followers=true`);\n        }\n\n        getGitHubUserFollowers({username: selectedusername || username}).then((followers = []) => {\n            this.setState({\n                showFollowers: true,\n                index: getIndex(),\n                user: {\n                    ...this.state.user,\n                    followers,\n                    followerCount\n                }\n            });\n        }).catch(error => {\n            console.error(error);\n        });\n    };\n\n    getNext = (e = {}) => {\n        const {user: {followers = [], followerCount} = {}} = this.state;\n\n        getMoreUsers().then((moreFollowers = []) => {\n            this.setState({\n                index: getIndex(),\n                user: {\n                    ...this.state.user,\n                    followers: [...moreFollowers, ...followers],\n                    followerCount\n                }\n            });\n        }).catch(error => {\n            console.error(error);\n        });\n    };\n\n    shouldComponentUpdate(nextProps, nextState, nextContext) {\n        return !(isEqual(nextState.user, this.state.user) && this.state.showFollowers === nextState.showFollowers)\n    }\n\n    render() {\n        const {showFollowers, index, user: {\n            username,\n            followers,\n            followerCount\n        } = {}} = this.state;\n\n        const {user = {}} = this.state;\n        const  title = showFollowers? 'Followers' : 'Github User'\n\n        return (\n            <div className=\"App\">\n                <div className=\"App-header\">\n                    {title}\n                    <FollowersDisplay user={user}\n                                      showFollowers={showFollowers}\n                                      findGitHubUser={this.findGitHubUser}\n                                      getGitHubFollowers={this.getGitHubFollowers}\n                    />\n                </div>\n                <main className=\"App-main\">\n                    <div id=\"result\">\n                        <div>handle: {username}</div>\n                        <div>followers displayed: {followers.length}</div>\n                        <div>total followers: {followerCount}</div>\n                    </div>\n                    <FindGitHubUser\n                        index={index}\n                        user={this.state.user}\n                        findGitHubUser={this.findGitHubUser}\n                        getGitHubFollowers={this.getGitHubFollowers}\n                        getNext={this.getNext}\n                        findGitHubUserChange={this.findGitHubUserChange} />\n                </main>\n            </div>\n        );\n    }\n}\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { BrowserRouter, Router, Route } from 'react-router-dom'\nimport { createBrowserHistory } from \"history\";\n\nconst history = createBrowserHistory();\n\nReactDOM.render(\n\t<BrowserRouter history={history}>\n\t\t<Route path=\"/\" component={App} forceRefresh={true} />\n\t</BrowserRouter>,\n\tdocument.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}